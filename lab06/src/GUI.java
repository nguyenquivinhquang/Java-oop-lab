import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;

public class GUI extends JFrame {
    private JLabel JproductName;
    private JPanel FirstPanel;
    private JTextField getProductName;
    private JLabel Jamount;
    private JTextField getAmount;
    private JTextField getDescription;
    private JLabel Jdescription;
    private JButton addButton;
    private JButton removeButton;
    private JLabel productList;
    private JScrollPane showlist;
    private JList list1;
    private JButton jSearch;

    private String productName, description;
    int amount;
    public Manager manager = new Manager();

    public GUI(String title) throws IOException {
        super(title);
        this.setContentPane(FirstPanel);
//        this.pack();
        super.setSize(1500, 1500); // set JPanel size
        this.addWindowListener(new WindowAdapter() { // write data when closing program
            @Override
            public void windowClosing(WindowEvent e) {
                try {
                    manager.writeToCsv();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                }
                super.windowClosing(e);
            }

        });

        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                getValue();
                manager.addProducts(new Product(productName, amount, description));
                update();
            }
        });
        removeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                getValue();
                manager.removeProducts(new Product(productName, amount, description));
                update();
            }
        });
        manager.readCsv();
        manager.updateList();
        //JList<String> list = new JList<String>(manager.list.toArray(new String[manager.list.size()]));

        list1.setListData(manager.list.toArray());

        jSearch.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                getValue();
                Product match = manager.search(productName);
                if (match.getProductName().equals("NULL"))
                    JOptionPane.showMessageDialog(null, "Cannot fuind the item");
                else {
                    String text = match.getProductInformation();
                    JOptionPane.showMessageDialog(null, text);
                }
            }
        });
    }

    public void getValue() {
        productName = getProductName.getText(); // get input product name
        description = getDescription.getText(); // get input description
        String num = getAmount.getText();
        amount = 0;
        if (isNumeric(num))
            amount = Integer.parseInt(getAmount.getText()); // get amount, and change it to integer because value from amount is string
    }

    private void update() { // this function update Jscroll panel to show list of items
        manager.updateList();
        list1.setListData(manager.list.toArray());

    }

    public void runWarehouseManager() throws IOException {
        JFrame frame = new GUI("WAREHOUSE MANAGER");
        frame.setVisible(true);
    }
//    public static void main(String[] args) throws IOException {
//        JFrame frame = new GUI("WAREHOUSE MANAGER");
//        frame.setVisible(true);
//    }

    public static boolean isNumeric(String strNum) {
        if (strNum == null) {
            return false;
        }
        try {
            double d = Double.parseDouble(strNum);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        FirstPanel = new JPanel();
        FirstPanel.setLayout(new GridLayoutManager(6, 5, new Insets(0, 0, 0, 0), -1, -1));
        JproductName = new JLabel();
        JproductName.setText("Product Name");
        FirstPanel.add(JproductName, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        getProductName = new JTextField();
        FirstPanel.add(getProductName, new GridConstraints(0, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(90, 30), null, 0, false));
        Jamount = new JLabel();
        Jamount.setText("Amount");
        FirstPanel.add(Jamount, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        getAmount = new JTextField();
        FirstPanel.add(getAmount, new GridConstraints(1, 1, 2, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(90, 30), null, 0, false));
        Jdescription = new JLabel();
        Jdescription.setText("Description");
        FirstPanel.add(Jdescription, new GridConstraints(3, 0, 2, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addButton = new JButton();
        addButton.setText("Add");
        FirstPanel.add(addButton, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 50), new Dimension(150, 150), 0, false));
        removeButton = new JButton();
        removeButton.setText("Remove");
        FirstPanel.add(removeButton, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 50), new Dimension(150, 150), 0, false));
        productList = new JLabel();
        productList.setText("Products list");
        FirstPanel.add(productList, new GridConstraints(1, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        getDescription = new JTextField();
        FirstPanel.add(getDescription, new GridConstraints(3, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(90, 100), null, 0, false));
        showlist = new JScrollPane();
        showlist.setForeground(new Color(-4473925));
        FirstPanel.add(showlist, new GridConstraints(3, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        list1 = new JList();
        showlist.setViewportView(list1);
        jSearch = new JButton();
        jSearch.setText("Search");
        FirstPanel.add(jSearch, new GridConstraints(5, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return FirstPanel;
    }

}
